sudo apt-get install gnome-shell
sudo apt-get install ubuntu-gnome-desktop
sudo apt install tasksel
sudo tasksel install kubuntu-desktop
git clone https://github.com/EliverLara/Sweet.git
sudo apt install git
mkdir -p ~/.themes
sudo apt install git
sudo add-apt-repository ppa:gnome3-team/gnome3
sudo apt-get install chrome-gnome-shell
cd Downloads
cd flat-remix-gnome
make
sudo make install
gsettings
gsettings set org.gnome.desktop.interface gtk-theme Sweet-Dark
gsettings set org.gnome.desktop.interface gtk-theme Sweet
gsettings set org.gnome.desktop.interface gtk-theme Sweet-Darkest
gsettings set org.gnome.desktop.interface gtk-theme "Flat-Remix-GTK-Blue-Dark" 
gsettings set org.gnome.desktop.interface icon-theme "Flat-Remix-Blue-Dark"
sudo cp $HOME/.local/share/gnome-shell/extensions/user-theme@gnome-shell-extensions.gcampax.github.com/schemas/org.gnome.shell.extensions.user-theme.gschema.xml /usr/share/glib-2.0/schemas && sudo glib-compile-schemas /usr/share/glib-2.0/schemas
sudo add-apt-repository ppa:webupd8team/gnome3
sudo apt install libglib2.0-dev-bin imagemagick
cd /home/andrew/.themes
cd Flat-Remix-Dark-fullPanel
make
cd Downloads
cd /home/andrew/Downloads
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
source /etc/os-release
echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ $UBUNTU_CODENAME main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-${UBUNTU_CODENAME}.list
sudo apt update
sudo apt install brave-keyring brave-browser
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
sudo apt install curl
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
source /etc/os-release
echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ $UBUNTU_CODENAME main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-${UBUNTU_CODENAME}.list
sudo apt update
sudo apt install brave-keyring brave-browser
gsettings set org.gnome.shell.extensions.user-theme name "Flat-Remix-Dark-fullPanel"
sudo apt install gnome-tweak-tool
gsettings set org.gnome.shell.extensions.user-theme name "Flat-Remix"
gsettings set org.gnome.shell.extensions.user_theme name "Flat-Remix"
gsettings
gsettings list-schemas
sudo apt install flatpak
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install HydraPaper
cd Downloads
flatpak install hydrapaper*.flatpak
sudo apt-get install git
sudo apt-get update
sudo apt-get install python3.7
sudo shutdown -P +90
shutdown -c
sudo shutdown -P +90
sudo shutdown -c
sudo mv /home/andrew/Downloads/pycharm-2019.1.3 /opt/
cd opt/pycharm-*/bin
cd /opt/pycharm-*/bin
pycharm.sh
chmod +x pycharm.sh
pycharm.sh
bash pycharm.sh
cd /opt/
rm -R pycharm-2019.1.3
sudo rm -rf directory_name
sudo rm -rf pycharm-2019.1.3/
cd pycharm-2019.1.3
sudo rm -rf pycharm-2019.1.3/
nautilus /opt
sudo shutdown -P +60
shutdown -c
sudo shutdown -P +120
shutdown -c
sudo shutdown -P +180
cd /home/andrew/Downloads/
bash Anaconda3-2019.03-Linux-x86_64.sh
sudo apt-get install fluidsynth
fluidsynth
conda create -n test_env python=3.6.3 anaconda
conda create -n pytorch python=3.7 anaconda
conda update -n base -c defaults conda
activate pytorch
conda activate pytorch
conda install pytorch torchvision cudatoolkit=10.0 -c pytorch
jupyter notebook --version
conda install pytorch torchvision cudatoolkit=10.0 -c pytorch
jupyter notebook
conda install -c conda-forge matplotlib 
conda install -c anaconda numpy 
pip install einops
conda deactivate
onda create --name pytorch-audio --clone pytorch
conda create --name pytorch-audio --clone pytorch
conda activate pytorch-audio
pip install pyFluidSynth
pip install madmom
conda activate pytorch-audio
pip uninstall pyfluidsynth
pip install midi2audio
git clone https://github.com/iterspatial/music-transcription.git
sudo add-apt-repository ppa:nathan-renniewaldock/flux
sudo --allow-unauthenticated add-apt-repository ppa:nathan-renniewaldock/flux
sudo add-apt-repository ppa:nathan-renniewaldock/flux --allow-unauthenticated
git pull
xinput list
xinput list-props 9
xinput set-prop 10 "libinput Middle Emulation Enabled" 1
xinput set-prop 9 "libinput Middle Emulation Enabled" 1
gsettings set com.canonical.Unity.Launcher launcher-position Bottom
conda activate pytorch-audio
conda install -c conda-forge librosa
conda activate pytorch-audio
pip install pyfftw
conda activate pytorch-audio
pip install soundfile
activate pytorch-audio
pip install samplerate
pip uninstall samplerate
conda activate pytorch-audio
pip install samplerate
sudo add-apt-repository ppa:nathan-renniewaldock/flux
apt-get update --allow-unauthenticated
sudo apt-get update --allow-unauthenticated
sudo add-apt-repository ppa:nathan-renniewaldock/flux
sudo apt-get update --allow-unauthenticated
sudo apt-get install redshift redshift-gtk
sudo apt-get lm-sensors\
sudo apt-get lm-sensors
sudo apt-get fancontrol
sudo apt-get install fancontrol
sudo apt-get install lm-sensors
sudo sensors-detect
sudo service module-init-tools restart
sudo pwmconfig
sudo sensors-detect
gsettings set org.gnome.desktop.background show-desktop-icons true
sudo rm -fr ~/.cache/compizconfig-1
sudo rm -fr ~/.compiz
sudo apt-get install --reinstall ubuntu-desktop unity compizconfig-settings-manager upstart
sudo dconf reset -f /org/compiz/
setsid unity
sudo apt install lm-sensors hddtemp
sensors
sudo apt install psensor
sudo add-apt-repository ppa:christian-boxdoerfer/fsearch-daily
sudo apt-get
sudo apt-get update
conda activate pytorch-audio
pip install trains
https://www.twitch.tv/kitboga
pip show madmom
pip list
conda activate pytorch-audio
pip show madmom
pip uninstall madmom
git clone --recursive https://github.com/CPJKU/madmom.git
python setup.py develop --user
pip install /home/andrew/Downloads/madmom-0.16.1.tar.gz
activate pytorch-audio
conda activate pytorch-audio
pip uninstall madmom
pip install madmom
pip install --upgrade --force-reinstall madmom
conda activate pytorch-audio
show madmom
pip show madmom
bash -c "$(wget -q -O - https://linux.kite.com/dls/linux/current)"
conda activate pytorch-audio
pip install wandb
wandb login
conda activate Prof Projects
conda list
conda env --list
conda env list
conda info --envs conda info -e
conda env list
conda activate Prof Projects
conda activate Prof_Projects
conda activate "Prof Projects"
pip install demjson
conda deactivate
pip install demjson
conda activate "Prof Projects:
f
\\conda install -c mutirri demjson 
conda deactivate
"
conda activate "Prof Projects"
conda install -c mutirri demjson 
conda activate "Prof Projects"
pip install demjson
conda remove --name myenv --all
conda remove --name "Prof Projects" --all
conda deactivate
conda remove --name "Prof Projects" --all
conda remove --name Prof Projects --all
conda env list
pip create -n prof-projects python=3.6
conda create -n prof-projects python=3.6
conda create -n prof-projects python=3.7
conda activate prof-projects
conda install pandas
conda install numpy
pip install demjson
conda activate prof-projects
pip install pyyaml
pip freeze
pip install -r requirements.txt
python train.py
pip install -r requirements.txt
python train.py
sudo install.sh
sudo unzip wps_symbol_fonts.zip -d /usr/share/fonts/truetype/msttcorefonts/.
sudo unzip wps-fonts-master.zip -d /usr/share/fonts/truetype/msttcorefonts/.
sudo fc-cache -fv
sudo apt install libcurl4-openssl-dev
sudo apt install libsqlite3-dev
sudo snap install --classic dmd && sudo snap install --classic dub
git clone https://github.com/skilion/onedrive.git
cd onedrive
make
sudo make install
onedrive
fsystemctl --user enable onedrive
systemctl --user enable onedrive
systemctl --user start onedrive
onedrive
onedrive --monitor
onedrive
python train.py
sudo apt install git build-essential automake autoconf libtool pkg-config intltool autoconf-archive libpcre3-dev libglib2.0-dev libgtk-3-dev libxml2-utils
git clone https://github.com/cboxdoerfer/fsearch.git
cd fsearch
./autogen.sh
./configure
make && sudo make install
sudo apt-get install alien dpkg-dev debhelper build-essential
cd Home/downloads
cd downloads
cd home
sudo alien packagename.rpm
sudo alien skypeforlinux-64.rpm
sudo dpkg -i skypeforlinux_8.50.0.38-2_amd64.deb 
conda activate pytorch-audio
pip install wandb --upgrade
git init
git add README.md
git commit -m "first commit"
git add README.md
git remote add origin https://github.com/iterspatial/iterspatial.github.io.git
git push -u origin master
git clone https://github.com/username/username.github.io
git clone https://github.com/iterspatial/iterspatial.github.io
echo "Hello World" > index.html
git add --all
git commit -m "Initial commit"
git push -u origin master
npm install ghost-cli@latest -g
sudo apt install npm
sudo apt-get install curl python-software-properties
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
sudo apt install nodejs
nodejs -v
npm install ghost-cli@latest -g
sudo npm install ghost-cli@latest -g
npm -v
npm install latest-version
npm -v
npm install -g npm@latest
apt-get install -y nodejs
sudo apt-get install -y nodejs
npm -v
n latest
apt-cache show npm | grep ^Version
which npm
sudo npm uninstall -g npm
npm uninstall -g npm
which npm
n latest
apt-cache show npm | grep ^Version
npm i -g npm@next
sudo npm i -g npm@next
apt-cache show npm | grep ^Version
npm -v
nodejs -v 
npm install ghost-cli@latest -g
sudo npm install ghost-cli@latest -g
ghost install local
ghost stop
chmod +x generate.sh
./generate.sh
ghost start
./generate.sh
git add --all
git commit -m "edited index"
git push
git add --all
git commit -m "initial ghost"
git push
git add --all
git commit -m "initial ghost"
git push
ghost start
git add --all
git commit -m "attila theme"
git add --all
git commit -m "attila theme"
git push
git config --global credential.helper cache
git config --global credential.helper 'cache --timeout=3600000000000'
git config --global user.name iterspatial
git config --global user.password 6CNdZqDEPYpjcBzZrP9qtqifJQwNtNfZ
ghost stop
ghost start
ghost stop
bash generate.sh
ghost start
bash generate.sh
ghost stop
ghost start
bash generate.sh
ghost start
ghost stop
ghost start
bash generate.sh
ghost start
bash generate.sh
ghost start
ghost stop
ghost start
bash generate.sh
ghost stop
ghost start
bash generate.sh
ghost start
bash generate.sh
snap install gimp
ghost start
ghost stop
ghost start
ghost stop
ghost start
conda activate pytorch-audio
conda install -c conda-forge opencv
conda activate college-tuition
conda install -c anaconda scikit-learn
conda activate college-tuition
conda install -c conda-forge xgboost
conda activate college-tuition
conda install scikit-learn
conda activate college-tuition
conda list
conda activate college-tuition
conda install -c anaconda seaborn
ghost start
bash generate.sh
cd website
cd
cd /Documents
cd Documents
cd Projects/website/iterspatial.github.io
git push --force
bash generate.sh
ghost stop
ghost startr
ghost start
bash generate.sh
ghost config andrewpeng.dev
bash generate.sh
ghost start
npm install --save gatsby-source-ghost
sudo npm install --save gatsby-source-ghost
npm install -g gatsby-cli
sudo npm install -g gatsby-cli
cd Documents/Projects
cd Documents
cd home
cd Home
cd ~/Documents/Projects/website/
gatsby new ghost-site https://github.com/TryGhost/gatsby-starter-ghost.git
It would be great to have that option, but unfortunately there is no AMD competition in this case. Not yet at least.
cd ghost-site
gatsby develop
npm install --save gatsby-source-ghost
gatsby develop
NODE_ENV=development gatsby develop
gatsby develop
npm install --save gatsby-source-ghost
gatsby develop
gatsbt develop
gatsby develop
ghost start
ghost stop
ghost start
ghost
ghost help
ghost version
ghost steup
ghost setup
ghost start
ghost doctor
ghost start
sudo ghost start
npm install ghost-cli@latest -g
sudo npm install ghost-cli@latest -g
ghost
ghost install local
bash generate.sh
ghost start
bash generate.sh
ghost starty
ghost start
git
git status
git push --force
ghost start
xinput list
xinput set-prop 13 "libinput Scroll Method Enabled" 0, 0, 1
xinput set-prop 13 "libinput Button Scrolling Button" 2
conda activate college-tuition
conda env export > environment.yml
conda list -e > req.txt
conda activate college-tuition
conda list -e > req.txt
git commit -m"added requirements"
git add requirements.txt
git commit -m"added requirements"
git push origin master
ghost start
bash generate.sh
git init
git remote
git remote add https://github.com/andrewpeng02/andrewpeng02.github.io.git
git remote add andrew https://github.com/andrewpeng02/andrewpeng02.github.io.git
git push
git remote add origin https://github.com/andrewpeng02/andrewpeng02.github.io.git
git push
git push origin master
git push origin master --force
bash generate.sh
ghost
ghost start
git init
git remote add origin https://github.com/andrewpeng02/andrewpeng02.github.io.git
bash generate.sh
sudo apt install testdisk
testdisk
ghost install local
ghost start
ghost stop
ghost start
ghost install local
npm install -g ghost-static-site-generator
sudo npm install -g ghost-static-site-generator
gssg --domain localhost:2370 --dest myblog-static-folder
git init
git add remote origin ghost install local
git remote add https://github.com/andrewpeng02/andrewpeng02.github.io.git
git remote add origin https://github.com/andrewpeng02/andrewpeng02.github.io.git
git push
git add --all
git commit -m"convert links"
git push --force
git push origin master --force
ghost start
bash generate.sh
git push --set-upstream origin master
git add --all
git commit -m'edit svg'
git push origin master
bash delete.sh
bash generate (copy).sh
bash delete.sh
bash generate.sh
git add --all
git commit -m"d"
git push origin master
git add --all
git commit -m"d"
git push origin master
bash generate.sh
sudo apt install rename
ghost start
bash generate.sh
ghost stop
ghost start
ghost help
ghost stop
ghost start --production
ghost stop
ghost start --production
bash generate.sh
ghost start
bash generate.sh
git add --all
git commit -m"fix 404 css"
git push origin mastert
git push origin master
git add --all
git commit -m"fix 404 css"
git push origin master
git add --all
git commit -m"fix 404 css"
git push origin master
conda create --name steam-reviews-sentiment python=3.7
git clone https://github.com/andrewpeng02/steam-reviews-sentiment.git
conda activate steam-reviews-sentiment
conda install -c anaconda pandas
pip install pyspellchecker
conda install -c conda-forge tqdm
conda install -c anaconda pandas
conda install -c conda-forge spacy
python -m spacy download en_core_web_sm
conda install -c anaconda pandas
conda install -c anaconda numpy
pip install einops
conda activate steam-reviews-sentiment
conda install -c anaconda nltk
conda install pytorch torchvision cudatoolkit=9.2 -c pytorch
conda activate steam-games-sentiment
conda info --envs
conda activate steam-reviews-sentiment
pip install pytorch-transformers
conda activate steam-reviews-sentiment
pip install -U symspellpy
conda activate steam-reviews-sentiment
conda install -c anaconda beautifulsoup4
conda activate steam-reviews-sentiment
pip install joblib
conda activate steam-reviews-sentiment
conda list
conda update pytorch-transformers
pip install pytorch-transformers --upgrade
conda activate steam-reviews-sentiment
pip install 
pip install [--editable]
pip install editable
pip install -e
pip install -e /home/andrew/Downloads/pytorch-transformers-master
watch sensors
conda activate steam-reviews-sentiment
pip install click
nvidia-smi
git clone https://github.com/Lurkki14/tuxclocker
cd tuxclocker
qmake rojekti.pro
make
sudo apt-get install nvidia-current-updates nvidia-settings-updates
sudo apt-get install  nvidia-settings
make
cd tuxclocker
make
sudo apt-get nvidia-settings
sudo apt-get install nvidia-settings
sudo apt-get install libxnvctrl
sudo apt-get install libxnvctrl-dev
make
nvidia-xconfig --cool-bits=28
sudo apt-get install xorg-server
sudo nvidia-xconfig -a --cool-bits=28 --allow-empty-initial-configuration
apt-get install nvidia-settings nvidia-xconfig nvidia-drive
sudo apt-get install nvidia-settings nvidia-xconfig nvidia-drive
sudo nvidia-xconfig --cool-bits=4'
'
sudo nvidia-xconfig --cool-bits=31
make install
qmake rojekti.pro
make
make install 
sudo make install 
start
open
tuxclocker
bash tuxclocker
bash tuxclocker.sh
sudo chmod +x tuxclocker
tuxclocker
tuxclockerd'
'
tuxclockerd
sudo chmod +x tuxclockerd
tuxclocker
bash tuxclocker
./tuxclocker
conda activate steam-reviews-sentiment
conda install -c anaconda seaborn
conda activate steam-reviews-sentiment
conda --list
conda -list
conda list
snap install ao
nvidia-
conda create -n transformer-translation python=3.7
conda activate transformer-translation
conda install pytorch torchvision cudatoolkit=10.0 -c pytorch
conda activate transformer-translation
pip install joblib
conda install -c conda-forge tqdm
conda install -c anaconda pandas
conda install -c anaconda nltk
conda activate transformer-translation
conda install -c conda-forge spacy
python -m spacy download en
conda activate transformer-translation
python -m spacy download en
python -m spacy download fr
conda activate transformer-translation
pip install click
pip install einops
conda activate transformer-translation
pip install einops
conda activate transformer-translation
conda install -c conda-forge matplotlib
sensors
nvcontrol
nvidia-smi
onedrive
onedrive help
onedrive
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr
pip install torchtext
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr
pip install spacy
conda activate pytorh-transformer
conda info --ennvs
conda info --ens
conda info --envs
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr
pi pinstall torchtext
pip pinstall torchtext
pip install torchtext
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr
pip install dill
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -no_cuda False
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -no_cuda false
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr 
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
python translate.py -load_weights weights
python translate.py -load_weights weights -src_lang en -tgt_lang fr
python translate.py -load_weights weights -src_lang en -trg_lang fr
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
ppython train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 1
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
conda activate transformer-translation
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
python translate.py -load_weights weights
python translate.py -load_weights weights -src_lang en -trg_lang fr
python train.py -src_data data/english.txt -trg_data data/french.txt -src_lang en -trg_lang fr -epochs 10
./configure
make -s
make install
sudo make install
make installcheck
sudo make installcheck
sudo make install
make installcheck
sudo ln -s /usr/include/sox/sox.h /usr/include/sox.h
sudo make install
make installcheck
sudo apt-get install sox
sudo apt-get install sox libsox-fmt-all
sudo apt-get update
conda env create -f environment.yml -name manim
conda update -n base -c defaults conda
conda create --name manim --clone ame
conda remove --name ame --all
nvidia-smi
watch nvidia-smi
watch -n0.5 nvidia-smi
sudo snap install gravit-designer
bash generate.sh
conda env export | grep -v "^prefix: " > environment.yml
conda activate transformer-translation
conda env export | grep -v "^prefix: " > environment.yml
git init
git add .
git commit -m "upload model to github"
git remote add origin https://github.com/andrewpeng02/transformer-translation.git
git remove -v
git remote -v
git push origin master
git
git reset --soft HEAD^1
git reset --soft HEAD
git status
git rm --cached transformer.pth
git rm --cached output/transformer.pth
git commit -m "initial commit"
git push
git push origin master
rm -rf .git
touch .gitignore
git init
git add .
git commit -m "upload model to github"
git remote add origin https://github.com/andrewpeng02/transformer-translation.git
rm -rf .git
git init
git add .
git commit -m "upload model to github"
git remote add origin https://github.com/andrewpeng02/transformer-translation.git
git push origin master
ghost start
ghost stop
sudo add-apt-repository ppa:daniruiz/flat-remix
sudo apt-get install flat-remix-gnome
conda activate steam-reviews-sentiment
conda list
pip uninstall pytorch-transformers
pip install transformers
pip install scikit-learn
conda activate steam-reviews-sentiment
conda install scikit-learn
ghost start
ghost stop
ghost start
ghost stop
git init
git add .
git commmit -m "upload"
git commit -m "upload"
git remote add origin https://github.com/andrewpeng02/imdb-sentiment.git
git push -u origin master
conda activate imdb-sentiment
conda activate steam-reviews-sentiment
conda env create -f environment.yml
conda env export | grep -v "^prefix: " > environment.yml
git init
git add .
git commit -m "upload models"
git remote add origin https://github.com/andrewpeng02/imdb-sentiment.git
git push origin master
git add --all
git commit -m "add environment.yml"
git push origin master
ghost start
bash generate.sh
conda activate music-transcription
conda info --env
conda activate pytorch-audio
conda list
conda create -n music-transcription -python 3.7
conda create -n music-transcription -python=3.7
conda create -n music-transcription python=3.7
conda activate music-transcription
conda install pytorch torchvision cudatoolkit=10.1 -c pytorch
conda activate music-transcription
pip install madmom
conda install pandas
conda --envs list
conda --env list
conda actifate g
conda activate g
conda info --envs
pkill -9 python
sudo shutdown -P +60
conda activate music-transcription
pip install wandb
chmod +x shadowfox_linux_x64
chmod +x shadowfox_linux_x
chmod +x shadowfox_linux_x64
bash shadowfox_linux_x64 
./shadowfox_linux_x64
fluidsynth
brew install fluid-synth --with-libsndfile
timidity
sudo apt install timidity
timidity input.mid -Ow -o out.wav
timidity sample_orig.mid -Ow -o sample_synth.wav
timidity sample_orig.midi -Ow -o sample_synth.wav
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
pip install -r requirements.txt
pip install tensorboard==1.14.0
kill python
conda activate music-transcription
conda list
conda activate music-transcription
pip install einops
conda install -c conda-forge matplotlib
nvidia-smi
conda env remove -n ENV_NAME
conda env remove -n music-transcription
conda env remove --name music-transcription
conda activate music-transcription
conda info --envs
conda create -n music-transcription python=3.7
conda activate music-transcription
conda install pytorch torchvision cudatoolkit=10.1 -c pytorch
pip install click
pip install wandb
pip install einops
pip install tqdm
pip install madmom
conda install -c anaconda joblib
conda install -c conda-forge librosa
conda install -c anaconda pandas
pip install samplerate
conda create --name music-clone --clone music-transcription
conda activate music-clone
conda install requirements.txt
cd output = self.transformer(src, tgt, tgt_mask=tgt_mask)
cd /home/andrew/Documents/onsets-and-frames-master
conda install --yes --file requirements.txt
pip install -r requirements.txt
conda activate music-clone
pip install tensorboard==1.14.0
java -version
diskpart
nvidia-smi -q
nvidia-smi -l
